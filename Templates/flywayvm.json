{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"storageAccountName": {
			"type": "string",
			"defaultValue" : "flyvmsa"
		},
		"adminUsername": {
			"type": "string"
		},
		"adminPassword": {
			"type": "securestring"
		},
		"dnsNameforLBIP": {
			"type": "string",
			"defaultValue" : "dnsnameflyway"
		},
		"vmNamePrefix": {
			"type": "string",
			"defaultValue": "myVM"		
		},
		"imagePublisher": {
			"type": "string",
			"defaultValue": "Canonical",
		},
		"imageOffer": {
			"type": "string",
			"defaultValue": "UbuntuServer"
		},
		"imageSKU": {
			"type": "string",
			"defaultValue": "14.04.2-LTS",
			"allowedValues": [
				"12.04.5-LTS",
				"14.04.2-LTS",
				"15.04"
			],
		},
		"lbName": {
			"type": "string",
			"defaultValue": "myLB"
		},
		"nicNamePrefix": {
			"type": "string",
			"defaultValue": "nic"
		},
		"publicIPAddressName": {
			"type": "string",
			"defaultValue": "myPublicIP"
		},
		"publicIPAddress1" : {
			"type" : "string",
			"defaultValue" : "publicIPforVM"
		},
		"vnetName": {
			"type": "string",
			"defaultValue": "myVNET"
		},
		"vmSize": {
			"type": "string",
			"defaultValue": "Standard_D1"
		},
		"location" : {
			"type" : "string",
			"defaultValue" : "Southeast Asia",
			"allowedValues" : [
				"Southeast Asia",
				"West US",
				"East US"
			]
		},
		"dnsNameForPublicIP": {
			"type": "string",
			"defaultValue" : "dnsfordemo"
		},
	},
	"variables": {
		"storageAccountType": "Standard_LRS",
		"availabilitySetName": "myAvSet",
		"addressPrefix": "10.0.0.0/16",
		"subnetName": "Subnet-1",
		"subnetPrefix": "10.0.0.0/24",
		"publicIPAddressType": "Dynamic",
		"vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
		"subnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('subnetName'))]",
		"publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
		"publicIPAddressID1": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddress1'))]",
		"numberOfInstances": 2,
		"lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('lbName'))]",
		"frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
		"lbPoolID": "[concat(variables('lbID'),'/backendAddressPools/BackendPool1')]",
		"lbProbeID": "[concat(variables('lbID'),'/probes/tcpProbe')]",
		"publicIPAddressType" : "Dynamic",
		"nic1" : "NIC1"
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"name": "[parameters('storageAccountName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"properties": {
				"accountType": "[variables('storageAccountType')]"
			}
		},
		{
			"type": "Microsoft.Compute/availabilitySets",
			"name": "[variables('availabilitySetName')]",
			"apiVersion": "2015-05-01-preview",
			"location": "[parameters('location')]",
			"properties": {}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[parameters('publicIPAddressName')]",
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[parameters('dnsNameforLBIP')]"
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/publicIPAddresses",
			"name": "[concat(parameters('publicIPAddress1'), copyindex())]",
			"copy": {
				"name": "ipLoop",
				"count": "[variables('numberOfInstances')]"
			},
			"location": "[parameters('location')]",
			"properties": {
				"publicIPAllocationMethod": "[variables('publicIPAddressType')]",
				"dnsSettings": {
					"domainNameLabel": "[concat(parameters('dnsNameForPublicIP'), copyIndex())]"
				}
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/virtualNetworks",
			"name": "[parameters('vnetName')]",
			"location": "[parameters('location')]",
			"properties": {
				"addressSpace": {
					"addressPrefixes": [
						"[variables('addressPrefix')]"
					]
				},
				"subnets": [
					{
						"name": "[variables('subnetName')]",
						"properties": {
							"addressPrefix": "[variables('subnetPrefix')]"
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"type": "Microsoft.Network/networkInterfaces",
			"name": "[concat(parameters('nicNamePrefix'), copyindex())]",
			"location": "[parameters('location')]",
			"copy": {
				"name": "nicLoop",
				"count": "[variables('numberOfInstances')]"
			},
			"dependsOn": [
				"[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
				"[concat('Microsoft.Network/loadBalancers/', parameters('lbName'))]"
			],
			"properties": {
				"ipConfigurations": [
					{
						"name": "ipconfig1",
						"properties": {
							"privateIPAllocationMethod": "Dynamic",
							"subnet": {
								"id": "[variables('subnetRef')]"
							},
							"publicIPAddress": {
								"id": "[concat(variables('publicIPAddressID1'), copyIndex())]"
							},
							"loadBalancerBackendAddressPools": [
								{
									"id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
								}
							],
							"loadBalancerInboundNatRules": [
								{
									"id": "[concat(variables('lbID'),'/inboundNatRules/RDP-VM', copyindex())]"
								}
							]
						}
					}
				]
			}
		},
		{
			"apiVersion": "2015-05-01-preview",
			"name": "[parameters('lbName')]",
			"type": "Microsoft.Network/loadBalancers",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[concat('Microsoft.Network/publicIPAddresses/', parameters('publicIPAddressName'))]"
			],
			"properties": {
				"frontendIPConfigurations": [
					{
						"name": "LoadBalancerFrontEnd",
						"properties": {
							"publicIPAddress": {
								"id": "[variables('publicIPAddressID')]"
							}
						}
					}
				],
				"backendAddressPools": [
					{
						"name": "BackendPool1"
					}
				],
				"inboundNatRules": [
					{
						"name": "RDP-VM0",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('frontEndIPConfigID')]"
							},
							"protocol": "tcp",
							"frontendPort": 50001,
							"backendPort": 3389,
							"enableFloatingIP": false
						}
					},
					{
						"name": "RDP-VM1",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('frontEndIPConfigID')]"
							},
							"protocol": "tcp",
							"frontendPort": 50002,
							"backendPort": 3389,
							"enableFloatingIP": false
						}
					}
				],
				"loadBalancingRules": [
					{
						"name": "LBRule",
						"properties": {
							"frontendIPConfiguration": {
								"id": "[variables('frontEndIPConfigID')]"
							},
							"backendAddressPool": {
								"id": "[variables('lbPoolID')]"
							},
							"protocol": "tcp",
							"frontendPort": 80,
							"backendPort": 80,
							"enableFloatingIP": false,
							"idleTimeoutInMinutes": 5,
							"probe": {
								"id": "[variables('lbProbeID')]"
							}
						}
					}
				],
				"probes": [
					{
						"name": "tcpProbe",
						"properties": {
							"protocol": "tcp",
							"port": 80,
							"intervalInSeconds": 5,
							"numberOfProbes": 2
						}
					}
				]
			}
		},
		{
		  "apiVersion": "2015-06-15",
		  "type": "Microsoft.Compute/virtualMachines",
		  "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
		  "copy": {
			"name": "virtualMachineLoop",
			"count": "[variables('numberOfInstances')]"
		  },
		  "location": "[parameters('location')]",
		  "dependsOn": [
			"[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
			"[concat('Microsoft.Network/networkInterfaces/', parameters('nicNamePrefix'), copyindex())]",
			"[concat('Microsoft.Network/networkInterfaces/', variables('nic1'))]",
			"[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetName'))]"
		  ],
		  "properties": {
			"availabilitySet": {
			  "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetName'))]"
			},
			"hardwareProfile": {
			  "vmSize": "[parameters('vmSize')]"
			},
			"osProfile": {
			  "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
			  "adminUsername": "[parameters('adminUsername')]",
			  "adminPassword": "[parameters('adminPassword')]"
			},
			"storageProfile": {
			  "imageReference": {
				"publisher": "[parameters('imagePublisher')]",
				"offer": "[parameters('imageOffer')]",
				"sku": "[parameters('imageSKU')]",
				"version": "latest"
			  },
			  "osDisk": {
				"name": "osdisk",
				"vhd": {
				  "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/','osdisk', copyindex(), '.vhd')]"
				},
				"caching": "ReadWrite",
				"createOption": "FromImage"
			  }
			},
			"networkProfile": {
			  "networkInterfaces": [
				{
				  "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('nicNamePrefix'),copyindex()))]"
				}
			  ]
			},
			"diagnosticsProfile": {
			  "bootDiagnostics": {
				 "enabled": "true",
				 "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
			  }
			}
		  }
		}
	]
}